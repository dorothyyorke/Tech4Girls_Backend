Object-Oriented Programming (OOP) is a programming paradigm based on the concept of "objects," which can contain data (attributes) and code (methods).
Four Main Principles:
• Encapsulation: Bundling data and methods that operate on that data within a class. This protects the data from outside access and ensures data integrity. 
• Abstraction: Hiding complex implementation details and showing only essential information to the user.
 • Inheritance: Creating new classes (child classes) from existing classes (parent classes), inheriting attributes and methods. This promotes code reuse and reduces redundancy. 
• Polymorphism: The ability of objects of different classes to respond to the same method call in their own specific way.
Benefits of OOP:
• Modularity: Code is organized into reusable modules (classes).
• Reusability: Inheritance allows you to reuse code from existing classes.
• Maintainability: Easier to maintain and debug because of modularity and encapsulation.
• Scalability: OOP makes it easier to build large and complex software systems.